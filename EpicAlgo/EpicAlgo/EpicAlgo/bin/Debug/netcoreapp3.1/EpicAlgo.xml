<?xml version="1.0"?>
<doc>
    <assembly>
        <name>EpicAlgo</name>
    </assembly>
    <members>
        <member name="F:EpicAlgo.HashTables.HashQuadratic`2.Table">
            <summary>The table</summary>
        </member>
        <member name="P:EpicAlgo.HashTables.HashQuadratic`2.LoadFactor">
            <summary>Gets the load factor.</summary>
            <value>The load factor.</value>
        </member>
        <member name="P:EpicAlgo.HashTables.HashQuadratic`2.Count">
            <summary>Gets or sets the count.</summary>
            <value>The count.</value>
        </member>
        <member name="P:EpicAlgo.HashTables.HashQuadratic`2.IsReadOnly">
            <summary>Gets a value indicating whether this instance is read only.</summary>
            <value>
              <c>true</c> if this instance is read only; otherwise, <c>false</c>.</value>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:EpicAlgo.HashTables.HashQuadratic`2.#ctor">
            <summary>Initializes a new instance of the <see cref="T:EpicAlgo.HashTables.HashQuadratic`2" /> class.</summary>
        </member>
        <member name="P:EpicAlgo.HashTables.HashQuadratic`2.Item(`0)">
            <summary>Gets the <see cref="!:T" /> with the specified key.</summary>
            <param name="key">The key.</param>
            <value>The <see cref="!:T" />.</value>
            <returns></returns>
            <exception cref="T:System.ArgumentOutOfRangeException">There is no such element in the table!</exception>
        </member>
        <member name="M:EpicAlgo.HashTables.HashQuadratic`2.System#Collections#IEnumerable#GetEnumerator">
            <summary>Gets the enumerator.</summary>
            <returns></returns>
        </member>
        <member name="M:EpicAlgo.HashTables.HashQuadratic`2.Add(System.Collections.Generic.KeyValuePair{`0,`1})">
            <summary>Adds the specified item.</summary>
            <param name="item">The item.</param>
        </member>
        <member name="M:EpicAlgo.HashTables.HashQuadratic`2.Contains(System.Collections.Generic.KeyValuePair{`0,`1})">
            <summary>Determines whether this instance contains the object.</summary>
            <param name="item">The item.</param>
            <returns>
              <c>true</c> if [contains] [the specified item]; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:EpicAlgo.HashTables.HashQuadratic`2.CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)">
            <summary>Copies to.</summary>
            <param name="array">The array.</param>
            <param name="arrayIndex">Index of the array.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:EpicAlgo.HashTables.HashQuadratic`2.Remove(System.Collections.Generic.KeyValuePair{`0,`1})">
            <summary>Removes the specified item.</summary>
            <param name="item">The item.</param>
            <returns></returns>
        </member>
        <member name="M:EpicAlgo.HashTables.HashQuadratic`2.Add(`0,`1)">
            <summary>Adds the specified key.</summary>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:EpicAlgo.HashTables.HashQuadratic`2.Clear">
            <summary>Clears this instance.</summary>
        </member>
        <member name="M:EpicAlgo.HashTables.HashQuadratic`2.Contains(`0)">
            <summary>Determines whether this instance contains the object.</summary>
            <param name="key">The key.</param>
            <returns>
              <c>true</c> if [contains] [the specified key]; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:EpicAlgo.HashTables.HashQuadratic`2.FindIndexOfKey(`0)">
            <summary>Finds the index of key.</summary>
            <param name="key">The key.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentOutOfRangeException">There is no such element in the table!</exception>
        </member>
        <member name="M:EpicAlgo.HashTables.HashQuadratic`2.GetEnumerator">
            <summary>Gets the enumerator.</summary>
            <returns></returns>
        </member>
        <member name="M:EpicAlgo.HashTables.HashQuadratic`2.GetIndex(`0,System.Int32)">
            <summary>Gets the index.</summary>
            <param name="key">The key.</param>
            <param name="attempt">The attempt.</param>
            <returns></returns>
        </member>
        <member name="M:EpicAlgo.HashTables.HashQuadratic`2.Remove(`0)">
            <summary>Removes the specified key.</summary>
            <param name="key">The key.</param>
            <returns></returns>
        </member>
        <member name="M:EpicAlgo.HashTables.HashQuadratic`2.ResizeIfRequires">
            <summary>Resizes if requires.</summary>
        </member>
        <member name="M:EpicAlgo.HashTables.HashQuadratic`2.PrimeCalc(System.Int32)">
            <summary>Calculates the prime number.</summary>
            <param name="number">The number.</param>
            <returns></returns>
        </member>
        <member name="M:EpicAlgo.HashTables.HashQuadratic`2.Print">
            <summary>Prints this instance.</summary>
        </member>
        <member name="F:EpicAlgo.Timer.HashTimer`2.HashTable">
            <summary>The hash table</summary>
        </member>
        <member name="M:EpicAlgo.Timer.HashTimer`2.#ctor(System.Collections.Generic.List{System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{`0,`1}}})">
            <summary>Initializes a new instance of the <see cref="T:EpicAlgo.Timer.HashTimer`2" /> class.</summary>
            <param name="hashtable">The hashtable.</param>
        </member>
        <member name="M:EpicAlgo.Timer.HashTimer`2.#ctor(System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{`0,`1}})">
            <summary>Initializes a new instance of the <see cref="T:EpicAlgo.Timer.HashTimer`2" /> class.</summary>
            <param name="hashtable">The hashtable.</param>
        </member>
        <member name="M:EpicAlgo.Timer.HashTimer`2.InsertTime(`0,`1)">
            <summary>Takes the time of inserting items.</summary>
            <param name="k">The k.</param>
            <param name="t">The t.</param>
        </member>
        <member name="M:EpicAlgo.Timer.HashTimer`2.InsertTime(System.Collections.Generic.Dictionary{`0,`1})">
            <summary>Takes the time of inserting items of a dictionary.</summary>
            <param name="dict">The dictionary.</param>
        </member>
        <member name="M:EpicAlgo.Timer.HashTimer`2.InsertTime(System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{`0,`1}})">
            <summary>Takes the time of inserting items of a list.</summary>
            <param name="kvp">The KVP.</param>
        </member>
        <member name="M:EpicAlgo.Timer.HashTimer`2.RemoveTime(`0,`1)">
            <summary>Takes the time of removing items.</summary>
            <param name="k">The k.</param>
            <param name="t">The t.</param>
        </member>
        <member name="M:EpicAlgo.Timer.HashTimer`2.RemoveTime(System.Collections.Generic.Dictionary{`0,`1})">
            <summary>Takes the time of removing items of a dictionary.</summary>
            <param name="dict">The dictionary.</param>
        </member>
        <member name="M:EpicAlgo.Timer.HashTimer`2.RemoveTime(System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{`0,`1}})">
            <summary>Takes the time of removing items of a list.</summary>
            <param name="kvp">The KVP.</param>
        </member>
        <member name="M:EpicAlgo.Timer.HashTimer`2.PrintInsert">
            <summary>Prints the amount of time it takes to insert.</summary>
        </member>
        <member name="M:EpicAlgo.Timer.HashTimer`2.PrintRemove">
            <summary>Prints the amount of time it takes to remove.</summary>
        </member>
        <member name="M:EpicAlgo.Timer.HashTimer`2.Print">
            <summary>Prints this instance.</summary>
        </member>
        <member name="F:EpicAlgo.Timer.TreeTimer`1.Tree">
            <summary>The tree</summary>
        </member>
        <member name="P:EpicAlgo.Timer.TreeTimer`1.InsertDictionary">
            <summary>Making global dictionaries with time stamps.</summary>
        </member>
        <member name="P:EpicAlgo.Timer.TreeTimer`1.RemoveDictionary">
            <summary>Making global dictionaries with time stamps.</summary>
        </member>
        <member name="M:EpicAlgo.Timer.TreeTimer`1.#ctor(System.Collections.Generic.List{System.Collections.Generic.ICollection{`0}})">
            <summary>Initializes a new instance of the <see cref="T:EpicAlgo.Timer.TreeTimer`1" /> class.</summary>
            <param name="tree">The tree.</param>
        </member>
        <member name="M:EpicAlgo.Timer.TreeTimer`1.#ctor(System.Collections.Generic.ICollection{`0})">
            <summary>Initializes a new instance of the <see cref="T:EpicAlgo.Timer.TreeTimer`1" /> class.</summary>
            <param name="tree">The tree.</param>
        </member>
        <member name="M:EpicAlgo.Timer.TreeTimer`1.InsertTime(`0)">
            <summary>Takes the time of inserting items.</summary>
            <param name="t">The t.</param>
        </member>
        <member name="M:EpicAlgo.Timer.TreeTimer`1.InsertTime(System.Collections.Generic.List{`0})">
            <summary>Takes the time of inserting items to a list.</summary>
            <param name="t">The t.</param>
        </member>
        <member name="M:EpicAlgo.Timer.TreeTimer`1.RemoveTime(`0)">
            <summary>Takes the time to removing items.</summary>
            <param name="t">The t.</param>
        </member>
        <member name="M:EpicAlgo.Timer.TreeTimer`1.RemoveTime(System.Collections.Generic.List{`0})">
            <summary>Takes the time to removing items of a list.</summary>
            <param name="t">The t.</param>
        </member>
        <member name="M:EpicAlgo.Timer.TreeTimer`1.PrintInsert">
            <summary>Prints the insert time.</summary>
        </member>
        <member name="M:EpicAlgo.Timer.TreeTimer`1.PrintRemove">
            <summary>Prints the remove time.</summary>
        </member>
        <member name="M:EpicAlgo.Timer.TreeTimer`1.Print">
            <summary>Prints this instance.</summary>
        </member>
        <member name="M:EpicAlgo.Trees.BinaryTree.BinaryTree`1.Add(`0)">
            <summary>Adds an item to the <see cref="T:System.Collections.Generic.ICollection`1">ICollection</see>.</summary>
            <param name="item">The object to add to the <see cref="T:System.Collections.Generic.ICollection`1">ICollection</see>.</param>
        </member>
        <member name="M:EpicAlgo.Trees.BinaryTree.BinaryTree`1.AddArray(`0[])">
            <summary>Adds the array with a loop.</summary>
            <param name="data">The data.</param>
        </member>
        <member name="M:EpicAlgo.Trees.BinaryTree.BinaryTree`1.AddList(System.Collections.Generic.List{`0})">
            <summary>Adds the list¨with a loop.</summary>
            <param name="data">The data.</param>
        </member>
        <member name="M:EpicAlgo.Trees.BinaryTree.BinaryTree`1.FindData(`0)">
            <summary>Finds the data.</summary>
            <param name="data">The data.</param>
            <returns>data</returns>
        </member>
        <member name="M:EpicAlgo.Trees.BinaryTree.BinaryTree`1.Clear">
            <summary>Removes all items from the <see cref="T:System.Collections.Generic.ICollection`1">ICollection</see>.</summary>
        </member>
        <member name="M:EpicAlgo.Trees.BinaryTree.BinaryTree`1.Contains(`0)">
            <summary>Determines whether this instance contains the object.</summary>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.ICollection`1">ICollection</see>.</param>
            <returns>
              <span class="keyword">
                <span class="languageSpecificText">
                  <span class="cs">true</span>
                  <span class="vb">True</span>
                  <span class="cpp">true</span>
                </span>
              </span>
              <span class="nu">
                <span class="keyword">true</span> (<span class="keyword">True</span> in Visual Basic)</span> if <paramref name="item" /> is found in the <see cref="T:System.Collections.Generic.ICollection`1">ICollection</see>; otherwise, <span class="keyword"><span class="languageSpecificText"><span class="cs">false</span><span class="vb">False</span><span class="cpp">false</span></span></span><span class="nu"><span class="keyword">false</span> (<span class="keyword">False</span> in Visual Basic)</span>.
            </returns>
        </member>
        <member name="M:EpicAlgo.Trees.BinaryTree.BinaryTree`1.CopyTo(`0[],System.Int32)">
            <summary>
            Copies the elements of the <see cref="T:System.Collections.Generic.ICollection`1">ICollection</see> to an <see cref="T:System.Array">Array</see>, starting at a particular <see cref="T:System.Array">Array</see> index.
            </summary>
            <param name="array">
            The one-dimensional <see cref="T:System.Array">Array</see> that is the destination of the elements copied from <see cref="T:System.Collections.Generic.ICollection`1">ICollection</see>. The <see cref="T:System.Array">Array</see> must have zero-based indexing.
            </param>
            <param name="arrayIndex">The zero-based index in <paramref name="array" /> at which copying begins.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:EpicAlgo.Trees.BinaryTree.BinaryTree`1.GetEnumerator">
            <summary>Returns an enumerator that iterates through the collection.</summary>
            <returns>An enumerator that can be used to iterate through the collection.</returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:EpicAlgo.Trees.BinaryTree.BinaryTree`1.PrintInOrder">
            <summary>Prints the items in order.</summary>
        </member>
        <member name="M:EpicAlgo.Trees.BinaryTree.BinaryTree`1.PrintPostOrder">
            <summary>Prints the items post order.</summary>
        </member>
        <member name="M:EpicAlgo.Trees.BinaryTree.BinaryTree`1.PrintPreOrder">
            <summary>Prints the items pre order.</summary>
        </member>
        <member name="M:EpicAlgo.Trees.BinaryTree.BinaryTree`1.Remove(`0)">
            <summary>Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Generic.ICollection`1">ICollection</see>.</summary>
            <param name="item">The object to remove from the <see cref="T:System.Collections.Generic.ICollection`1">ICollection</see>.</param>
            <returns>
              <span class="keyword">
                <span class="languageSpecificText">
                  <span class="cs">true</span>
                  <span class="vb">True</span>
                  <span class="cpp">true</span>
                </span>
              </span>
              <span class="nu">
                <span class="keyword">true</span> (<span class="keyword">True</span> in Visual Basic)</span> if <paramref name="item" /> was successfully removed from the <see cref="T:System.Collections.Generic.ICollection`1">ICollection</see>; otherwise, <span class="keyword"><span class="languageSpecificText"><span class="cs">false</span><span class="vb">False</span><span class="cpp">false</span></span></span><span class="nu"><span class="keyword">false</span> (<span class="keyword">False</span> in Visual Basic)</span>. This method also returns <span class="keyword"><span class="languageSpecificText"><span class="cs">false</span><span class="vb">False</span><span class="cpp">false</span></span></span><span class="nu"><span class="keyword">false</span> (<span class="keyword">False</span> in Visual Basic)</span> if <paramref name="item" /> is not found in the original <see cref="T:System.Collections.Generic.ICollection`1">ICollection</see>.
            </returns>
        </member>
        <member name="M:EpicAlgo.Trees.BinaryTree.BinaryTree`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>Returns an enumerator that iterates through a collection.</summary>
            <returns>An <see cref="T:System.Collections.IEnumerator">IEnumerator</see> object that can be used to iterate through the collection.</returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
    </members>
</doc>
